<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lael.infra.modules.share.ShareMapper">
    <resultMap id="resultMapObj" type="com.lael.infra.modules.share.Share"></resultMap>

	<sql id ="selectCommon">
		FROM share c
		WHERE 1=1
		<choose>
			<when test="shOption == 1">AND food_div LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 2">AND title LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 3">AND people_num = #{shValue}</when>
			<when test="shOption == 4">AND place LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 5">AND time LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 6">AND price LIKE CONCAT('%',#{shValue},'%')</when>
		</choose>
	</sql>

	<select id="selectList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql"></include>
		SELECT
			c.seq
			,c.food_div
			,c.title
			,c.people_num
			,c.info
			,c.place
			,c.date
			,c.time
			,c.price
			,c.DelNy
			,c.createDate  <!--  관리자 today를 위해 생성 -->
		<include refid="selectCommon" />
		ORDER BY c.seq DESC
		<include refid="Base.orderByLimitForMysql" />
		<include refid="Base.selectListLowerForMysql" /> 
	</select>
	
	<select id="selectListFav" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql"></include>
		SELECT
			c.seq
			,c.food_div
			,c.title
			,c.people_num
			,c.info
			,c.place
			,c.date
			,c.time
			,c.price
			,c.DelNy
			,c.createDate <!--  관리자 today를 위해 생성 -->
			,c.likeCount 
			,(select likeNy from favorite f where f.memberSeq = #{memberSeq} and f.shareSeq = c.seq) as likeNy
			,sm.nick_nm
		FROM share c
			LEFT JOIN share_member sm on sm.seq = c.memberSeq  <!-- shareSeq와 seq를 맞춰야 함 -->
		WHERE 1=1
		<choose>
			<when test="shOption == 1">AND food_div = #{shValue}</when>
			<when test="shOption == 2">AND title LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 3">AND people_num = #{shValue}</when>
			<when test="shOption == 4">AND place LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 5">AND time LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 6">AND price LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 7">AND nick_nm LIKE CONCAT('%',#{shValue},'%')</when>
		</choose>
		ORDER BY c.seq DESC
		<include refid="Base.orderByLimitForMysql" />
		<include refid="Base.selectListLowerForMysql" /> 
	</select>
	
	<select id="favList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql"></include>
		select 
			s.*
		    ,f.likeNy
		from share s
			inner join favorite f on f.shareSeq = s.seq
		where 1=1
			and f.memberSeq = #{memberSeq}
			and f.likeNy = '1'
		<choose>
			<when test="shOption == 1">AND food_div = #{shValue}</when>
			<when test="shOption == 2">AND title LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 3">AND people_num = #{shValue}</when>
			<when test="shOption == 4">AND place LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 5">AND time LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 6">AND price LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 7">AND nick_nm LIKE CONCAT('%',#{shValue},'%')</when>
		</choose>
		ORDER BY s.seq DESC
		<include refid="Base.orderByLimitForMysql" />
		<include refid="Base.selectListLowerForMysql" /> 
	</select>
	
	<select id="selectMyList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql"></include>
		SELECT
			c.seq
			,c.food_div
			,c.title
			,c.people_num
			,c.info
			,c.place
			,c.date
			,c.time
			,c.price
			,c.DelNy
			,c.createDate
		FROM share c
		WHERE 1=1
			and memberSeq = #{memberSeq}
			<choose>
				<when test="shOption == 1">AND food_div = #{shValue}</when>
				<when test="shOption == 2">AND title LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 3">AND people_num = #{shValue}</when>
				<when test="shOption == 4">AND place LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 5">AND time LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 6">AND price LIKE CONCAT('%',#{shValue},'%')</when>
			</choose>
		ORDER BY c.seq DESC
		<include refid="Base.orderByLimitForMysql" />
		<include refid="Base.selectListLowerForMysql" /> 
	</select>

	<select id="selectMyCount" resultType="Integer">
		SELECT COUNT(*)
		FROM share c
		WHERE 1=1	
			and memberSeq = #{memberSeq}
			<choose>
				<when test="shOption == 1">AND food_div = #{shValue}</when>
				<when test="shOption == 2">AND title LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 3">AND people_num = #{shValue}</when>
				<when test="shOption == 4">AND place LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 5">AND time LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 6">AND price LIKE CONCAT('%',#{shValue},'%')</when>
			</choose>
		ORDER BY c.createDate DESC
	</select>
	
	<insert id="likeCount">  <!-- Inst -->
	INSERT INTO favorite (
			memberSeq
			,shareSeq
			,likeNy
		)
		VALUES (
			#{memberSeq}
			,#{seq}
			,1
		)

		<selectKey resultType="String" keyProperty="likeSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>		
	</insert>
	
	<select id="likeOne" resultMap="resultMapObj">
		SELECT
			likeSeq
			,memberSEq
			,shareSeq
			,likeNy
			
		FROM favorite
		where 1=1
			and memberSeq = #{memberSeq}
			and shareSeq = #{seq}
	</select>
	
	<update id="likeUpdt">
		UPDATE favorite
		SET
			likeNy = #{likeNy}
		where 1=1
			and memberSeq = #{memberSeq}
			and shareSeq = #{seq}
	</update>

	<update id="likeCountUpdt">
		UPDATE share
		SET
			likeCount = #{likeCount}
		where 1=1
			and seq = #{seq}
	</update>
	
	<select id="selectList1" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql"></include>
		SELECT
			c.seq
			,c.food_div
			,c.title
			,c.people_num
			,c.info
			,c.place
			,c.date
			,c.time
			,c.price
			,c.DelNy
			,c.createDate
		<include refid="selectCommon" />
		ORDER BY c.seq DESC      <!-- ASC -->
		<include refid="Base.orderByLimitForMysql" />
		)a
	</select>

	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon" />
	</select>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			c.seq
			,c.food_div
			,c.title
			,c.people_num
			,c.info
			,c.place
			,c.date
			,c.time
			,c.price
			,c.DelNy
			,c.createDate
			,c.memberSeq
		FROM share c
	 	WHERE 1=1
	 		AND c.seq = #{seq}
	</select>
	
	<select id="nowList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql"></include>
		SELECT
			c.seq
			,c.food_div
			,c.title
			,c.people_num
			,c.info
			,c.place
			,c.date
			,c.time
			,c.price
			,c.DelNy
			,c.createDate
		<include refid="selectCommon" />
		ORDER BY c.seq DESC
		<include refid="Base.orderByLimitForMysql" />
		<include refid="Base.selectListLowerForMysql" /> 
	</select>
	
	<insert id="insert">
	INSERT INTO share (
			food_div
			,title
			,people_num
			,place
			,date
			,time
			,price
			,info
			,createDate
			,memberSeq
		)
		VALUES (
			#{food_div}
			,#{title}
			,#{people_num}
			,#{place}
			,#{date}
			,#{time}
			,#{price}
			,#{info}
			,now()
			,#{memberSeq}
		)
		
		<selectKey resultType="String" keyProperty="seq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>

	<update id="update">
	 	UPDATE share
	 	SET
			food_div = #{food_div}
			,title = #{title}
			,people_num = #{people_num}
			,place = #{place}
			,date = #{date}
			,time = #{time}
			,price = #{price}
			,info = #{info}
			,memberSeq = #{memberSeq}
 			
		WHERE
			seq = #{seq}
 	</update>
	
	<!-- ID ajax s -->
	<select id="idCheck" resultType="int"> 
		select count(*) 
		from share 
		where id = #{id}
	</select>
	
	<select id="selectOneCount2" resultType="Integer">
		SELECT COUNT(*)
		FROM share c
		WHERE 1=1		
			and DATE(createDate) = DATE(now()) 
	</select>
	
	<select id="selectList2" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql"></include>
		SELECT
			c.food_div
			,c.title
			,c.people_num
			,c.info
			,c.place
			,c.date
			,c.time
			,c.price
			,c.DelNy
			,c.createDate
		FROM share c
		WHERE 1=1		
			and DATE(createDate) = DATE(now()) 
		ORDER BY c.seq DESC
		<include refid="Base.orderByLimitForMysql" />
		) a
		limit 6 offset #{startRnumForMysql}
	</select>
	

</mapper>